language: cpp
sudo: required
dist: trusty

compiler:
  - gcc
  - clang
before_install:
  - sudo add-apt-repository -y ppa:beineri/opt-qt58-trusty
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo add-apt-repository -y ppa:chris-lea/libsodium
  - sudo add-apt-repository -y 'deb http://archive.ubuntu.com/ubuntu xenial main universe'
  - sudo apt-get update -qq

  - if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
  - if [ "$CXX" = "clang++" ]; then export CXX="clang++-3.8" CC="clang-3.8"; fi

install:
  - sudo apt-get install -y -qq clang-3.8 g++-5 extra-cmake-modules qt58base qt58graphicaleffects qt58quickcontrols2 qt58quickcontrols qt58svg qt58declarative ruby ruby-dev  rubygems libsodium-dev libqt4-opengl-dev
  - gem install fpm --conservative

  # install newer cmake
  - CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
  - mkdir cmake
  - wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  - export PATH=${TRAVIS_BUILD_DIR}/cmake/bin:${PATH}
  - cmake --version

  # install libelectronpass
  - git clone https://github.com/electronpass/libelectronpass.git
  - cd libelectronpass
  - mkdir build
  - cd build
  - cmake ..
  - sudo make install
  - sudo ldconfig /usr/local/lib
  - cd ../..

before_script:
  - QT_ENV_SCRIPT=$(find /opt -name 'qt*-env.sh')
  - source $QT_ENV_SCRIPT

  # clone and decrypt API keys
  # refer to https://github.com/electronpass/credentials for more information
  - git clone https://github.com/electronpass/credentials.git
  - python3 credentials/configure.py credentials/keys.json.asc ${keys_encryption_password} credentials/desktop.tpl app/sync/keys.txt
script:
  - mkdir appdir
  - mkdir build
  - cd build
  - cmake -DCMAKE_INSTALL_PREFIX:PATH=../appdir/usr/. ..
  - make -j4
after_success:
  #create and upload appimage
  - sudo make INSTALL_ROOT=../appdir install ; sudo chown -R $USER ../appdir ; find ../appdir/
  - cd ../
  - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt*.AppImage
  - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  - ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -bundle-non-qt-libs -qmldir=.
  - ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -appimage -qmldir=.
  - find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - chmod a+x ElectronPass-x86_64.AppImage

  # install rpm later. needed for creating rpm package, when installed appimage not working and therefore
  - sudo apt-get -y -qq install rpm

  # create deb and rpm package with fpm
  - LOWERAPP=electronpass
  - VERSION=0.0.1
  - DIR=appdir
  - fpm -s dir -t deb -n $LOWERAPP -v $VERSION -C $DIR
  - fpm -s dir -t rpm -n $LOWERAPP -v $VERSION -C $DIR

  # upload image to transfer.sh
  - curl --upload-file ./ElectronPass*.AppImage https://transfer.sh/electronpass-git.$(git rev-parse --short HEAD)-x86_64.AppImage
  - curl --upload-file ./*.deb https://transfer.sh/electronpass-git.$(git rev-parse --short HEAD)-x86_64.deb
  - curl --upload-file ./*.rpm https://transfer.sh/electronpass-git.$(git rev-parse --short HEAD)-x86_64.rpm
