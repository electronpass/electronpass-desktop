language: cpp
sudo: true
dist: trusty

compiler:
  - gcc
  - clang

addons:
  apt:
    sources:
      - sourceline: 'ppa:beineri/opt-qt58-trusty'
      - sourceline: 'ppa:ubuntu-toolchain-r/test'
      - sourceline: 'deb http://archive.ubuntu.com/ubuntu xenial main universe'
    packages:
      - clang-3.8
      - g++-5 extra-cmake-modules
      - qt58base
      - qt58graphicaleffects
      - qt58quickcontrols2
      - qt58quickcontrols
      - qt58svg
      - qt58declarative
      - libqt4-opengl-dev

before_install:
  - if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
  - if [ "$CXX" = "clang++" ]; then export CXX="clang++-3.8" CC="clang-3.8"; fi

before_script:
  - QT_ENV_SCRIPT=$(find /opt -name 'qt*-env.sh')
  - source $QT_ENV_SCRIPT

  # clone and decrypt API keys
  # refer to https://github.com/electronpass/credentials for more information
  - cp app/sync/keys.default.hpp app/sync/keys.hpp
  - git clone https://github.com/electronpass/credentials.git
  - python3 credentials/configure.py credentials/keys.json.asc ${keys_encryption_password} app/sync/keys.hpp
script:
  - mkdir build
  - chmod +x install-dependencies.sh
  - ./install-dependencies.sh
  - cd build
  - qmake -makefile ../electronpass.pro
  - make -j4
after_success:
  # Create and upload appimage
  - cd ..
  - mkdir appdir
  - cp bin/electronpass appdir/
  - cp data/electronpass.desktop appdir/
  - cp data/electronpass.svg appdir/
  - cd appdir
  - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  - sudo ./linuxdeployqt-continuous-x86_64.AppImage electronpass.desktop -appimage -qmldir=../app/qml/
  - cd ..
  - mkdir upload
  - mv appdir/ElectronPass*.AppImage upload
  # upload to github releases (many thanks to https://github.com/probonopd)
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash ./upload.sh upload/*

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)$/
